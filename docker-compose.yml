x-logging: &default-logging
    options:
        max-size: '20k'
        max-file: '10'

services:
    django:
        build:
            context: .
            dockerfile: docker/Dockerfile.backend
        command: gunicorn wsgi:application -b :8000 --reload
        # command: gunicorn asgi:application -k uvicorn.workers.UvicornWorker -b :8000 --reload
        environment:
            - DATABASE_URL=postgres://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
        env_file: .env
        volumes:
            - ./src/backend:/app
        ports:
            - 8000:8000
            - 80:80
            - 8001:8001
        stdin_open: true
        tty: true
        logging: *default-logging
        depends_on:
            - db
            - redis

    db:
        image: postgres:latest
        env_file: .env
        environment:
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_DB=${DB_NAME}
        ports:
            - 5432:5432
        volumes:
            - ./var/postgres:/var/lib/postgresql/data:delegated

    redis:
        image: redis
        ports:
            - 6379:6379
        logging:
            options:
                max-size: '20k'
                max-file: '10'

    celery:
        build:
            context: .
            dockerfile: docker/Dockerfile.backend
        command: python -m celery -A settings worker -l INFO
        volumes:
            - ./src/backend:/app
        environment:
            - CELERY_BROKER_URL=redis://redis:6379/0
            - CELERY_RESULT_BACKEND=redis://redis:6379/0
        depends_on:
            - redis

    celery-beat:
        build:
            context: .
            dockerfile: docker/Dockerfile.backend
        command: python -m celery -A settings beat -l INFO
        volumes:
            - ./src/backend:/app
        environment:
            - CELERY_BROKER_URL=redis://redis:6379/0
            - CELERY_RESULT_BACKEND=redis://redis:6379/0
        depends_on:
            - redis

volumes:
    myapp:
